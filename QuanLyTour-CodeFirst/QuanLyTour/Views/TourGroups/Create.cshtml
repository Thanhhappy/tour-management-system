@model QuanLyTour.Models.TourGroup

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_User_layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row input-field col s12">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-red" })
        </div>

        <div class="row input-field col s12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="row input-field col s12">
            @Html.LabelFor(model => model.LeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.LeaveDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger" })
        </div>

        <div class="row input-field col s12">
            @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
        </div>

        <div class="row input-field col s12">
            @Html.LabelFor(model => model.TourID, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.TourID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TourID, "", new { @class = "text-danger" })
        </div>

        <div class="row input-field col s12">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
           
        </div>

        <div class="row col s12">
            <input type="submit" value="Create" class="btn btn-default" />
            <input type="reset" value="Reset" class="btn btn-flat" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
